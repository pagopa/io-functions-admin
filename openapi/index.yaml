swagger: "2.0"
info:
  version: 1.1.0
  title: IO API for administration purpose
  contact:
    name: Digital Transformation Team
    url: https://forum.italia.it/c/progetto-io
  x-logo:
    url: https://io.italia.it/assets/img/io-logo-blue.svg
  description: >
    # Warning

    **This is an experimental API that is (most probably) going to change as we evolve the IO platform.**

    # Introduction

    This is the documentation of the IO API for administration purpose of the platform.

host: api.cd.italia.it
basePath: "/adm"
schemes:
  - https
security:
  - SubscriptionKey: []
paths:
  "/services/{service_id}":
    parameters:
      - name: service_id
        in: path
        type: string
        required: true
        description: The ID of an existing Service.
    get:
      operationId: getService
      summary: Get Service
      description: A previously created service with the provided service ID is returned.
      responses:
        "200":
          description: Service found.
          schema:
            "$ref": "#/definitions/Service"
          examples:
            application/json:
              id: 2b3e728c1a5d1efa035c-0000000000000001
              authorized_recipients:
                - XXXYYY79A95Y000X
              department_name: dept
              organization_name: org
              service_id: 2b3e728c1a5d1efa035c
              service_name: service
              version: 1
              authorized_cidrs: []
        "401":
          description: Unauthorized
        "404":
          description: No service found for the provided ID.
      parameters: []
    put:
      responses:
        "200":
          description: Service updated.
          schema:
            "$ref": "#/definitions/Service"
          examples:
            application/json:
              id: 2b3e728c1a5d1efa035c-0000000000000001
              authorized_recipients:
                - XXXYYY79A95Y000X
              department_name: dept
              organization_name: org
              service_id: 2b3e728c1a5d1efa035c
              service_name: service
              version: 1
              authorized_cidrs: []
        "401":
          description: Unauthorized
        "404":
          description: No service found for the provided ID.
      summary: Update Service
      operationId: updateService
      description: |-
        Update an existing service with the attributes provided in the
        request payload.
      parameters:
        - in: body
          name: body
          schema:
            "$ref": "#/definitions/Service"
          description: The Service payload.
          x-examples:
            application/json:
              authorized_recipients:
                - XXXYYY79A95Y000X
              department_name: dept
              organization_name: org
              service_id: 2b3e728c1a5d1efa035c
              service_name: service
              authorized_cidrs: []
  "/services/{service_id}/logo":
    parameters:
      - name: service_id
        in: path
        type: string
        required: true
        description: The ID of a existing Service.
      - name: body
        in: body
        required: true
        schema:
          $ref: "#/definitions/Logo"
        description: The logo payload
    put:
      responses:
        "201":
          description: Logo uploaded.
          headers:
            Location:
              description: Link to the uploaded logo
              type: string
        "400":
          description: Invalid payload.
          schema:
            $ref: "#/definitions/ProblemJson"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: No service found for the provided ID.
        "500":
          description: Internal server error
      summary: Upload service logo.
      operationId: uploadServiceLogo
  "/services":
    post:
      responses:
        "200":
          description: Service created.
          schema:
            "$ref": "#/definitions/Service"
          examples:
            application/json:
              id: 2b3e728c1a5d1efa035c-0000000000000001
              authorized_recipients:
                - XXXYYY79A95Y000X
              department_name: dept
              organization_name: org
              service_id: 2b3e728c1a5d1efa035c
              service_name: service
              version: 1
              authorized_cidrs: []
        "401":
          description: Unauthorized
      summary: Create Service
      description: |-
        Create a new Service with the attributes provided in the requst
        payload.
      operationId: createService
      parameters:
        - in: body
          name: body
          schema:
            "$ref": "#/definitions/Service"
          description: The Service payload.
          x-examples:
            application/json:
              authorized_recipients:
                - XXXYYY79A95Y000X
              department_name: dept
              organization_name: org
              service_id: 2b3e728c1a5d1efa035c
              service_name: service
              authorized_cidrs: []
  "/development-profiles/{fiscal_code}":
    post:
      tags:
        - restricted
      description: |-
        Create a development profile for the user identified by the
        provided fiscal code.
      operationId: createDevelopmentProfile
      summary: Create DevelopmentProfile
      parameters:
        - $ref: "#/parameters/SandboxFiscalCode"
        - in: body
          name: body
          schema:
            $ref: "#/definitions/DevelopmentProfile"
          x-examples:
            application/json:
              email: foobar@example.com
      responses:
        "200":
          description: Profile updated.
          schema:
            $ref: "#/definitions/ExtendedProfile"
          examples:
            application/json:
              email: foobar@example.com
              version: 0
        "400":
          description: Invalid payload.
          schema:
            $ref: "#/definitions/ProblemJson"
        "401":
          description: Unauthorized
        "409":
          description: Conflict.
          schema:
            $ref: "#/definitions/ProblemJson"
        "429":
          description: Too many requests
definitions:
  DevelopmentProfile:
    type: object
    properties:
      email:
        $ref: "#/definitions/EmailAddress"
    required:
      - email
  EmailAddress:
    $ref: "https://raw.githubusercontent.com/teamdigitale/io-functions-commons/master/openapi/definitions.yaml#/EmailAddress"
  ProblemJson:
    $ref: "https://raw.githubusercontent.com/teamdigitale/io-functions-commons/master/openapi/definitions.yaml#/ProblemJson"
  Service:
    description: A Service tied to an user's subscription.
    type: object
    properties:
      service_id:
        $ref: "#/definitions/ServiceId"
      service_name:
        $ref: "#/definitions/ServiceName"
      organization_name:
        $ref: "#/definitions/OrganizationName"
      department_name:
        $ref: "#/definitions/DepartmentName"
      authorized_cidrs:
        description: |-
          Allowed source IPs or CIDRs for this service.
        type: array
        items:
          $ref: "#/definitions/CIDR"
      authorized_recipients:
        description: |-
          If non empty, the service will be able
          to send messages only to these fiscal codes.
        type: array
        items:
          $ref: "#/definitions/FiscalCode"
      is_visible:
        type: boolean
        default: false
      max_allowed_payment_amount:
        $ref: "#/definitions/MaxAllowedPaymentAmount"
      organization_fiscal_code:
        $ref: "#/definitions/OrganizationFiscalCode"
      version:
        type: integer
      id:
        type: string
      require_secure_channels:
        type: boolean
        default: false
      description:
        type: string
      web_url:
        type: string
      app_ios:
        type: string
      app_android:
        type: string
      tos_url:
        type: string
      privacy_url:
        type: string
      address:
        type: string
      phone:
        type: string
      email:
        type: string
      pec:
        type: string
      scope:
        # This property should be required, but it's currently optional for backward-compatibility reasons
        type: string
        x-extensible-enum:
          - NATIONAL
          - LOCAL
    required:
      - service_id
      - service_name
      - organization_name
      - department_name
      - authorized_cidrs
      - authorized_recipients
      - organization_fiscal_code
  ServiceId:
    type: string
    description: |-
      The ID of the Service. Equals the subscriptionId of a registered
      API user.
    minLength: 1
  ServiceName:
    type: string
    description: The name of the service. Will be added to the content of sent messages.
    minLength: 1
  OrganizationName:
    type: string
    description: |-
      The organization that runs the service. Will be added to the content
      of sent messages to identify the sender.
    minLength: 1
  DepartmentName:
    type: string
    description: |-
      The department inside the organization that runs the service. Will
      be added to the content of sent messages.
    minLength: 1
  CIDR:
    type: string
    description: Describes a single IP or a range of IPs.
    pattern: "^([0-9]{1,3}[.]){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))?$"
  FiscalCode:
    type: string
    description: User's fiscal code.
    format: FiscalCode
    x-import: italia-ts-commons/lib/strings
    example: SPNDNL80R13C555X
  MaxAllowedPaymentAmount:
    description: |-
      Maximum amount in euro cents that a service is allowed to charge to a user.
    type: integer
    minimum: 0
    maximum: 9999999999
    default: 0
  OrganizationFiscalCode:
    type: string
    description: Organization fiscal code.
    format: OrganizationFiscalCode
    x-import: italia-ts-commons/lib/strings
    example: "12345678901"
  ExtendedProfile:
    $ref: "https://raw.githubusercontent.com/teamdigitale/io-functions-commons/master/openapi/definitions.yaml#/ExtendedProfile"
  Logo:
    type: object
    properties:
      logo:
        type: string
        format: byte
        minLength: 1
    required:
      - logo
responses: {}
parameters:
  SandboxFiscalCode:
    name: fiscal_code
    in: path
    type: string
    maxLength: 16
    minLength: 16
    required: true
    description: The sandbox fiscal code of the user, all upper case.
    pattern: "[A-Z]{6}[0-9]{2}A[0-9]{2}Y[0-9]{3}X"
    x-example: SPNDNL80A13Y555X
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  SubscriptionKey:
    type: apiKey
    name: Ocp-Apim-Subscription-Key
    in: header
    description: The API key obtained through the developer portal.
